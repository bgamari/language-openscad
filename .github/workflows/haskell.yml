# Haskell stack project Github Action
# Adapted from https://gist.github.com/mstksg/11f753d891cee5980326a8ea8c865233

name: Haskell Stack Project CI

on:
  push:
  schedule:
    - cron: '0 0 * * 1'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        plan:
          - {build: stack, resolver: '--resolver lts-14.4'}
        include: []

        exclude:
          - os: macOS-latest
            plan:
              build: cabal

    runs-on: ${{ matrix.os }}
    steps:
      - name: Install OS Packages
        uses: mstksg/get-package@v1
        with:
          apt-get: ${{ matrix.apt-get }}
          brew: ${{ matrix.brew }}
      - uses: actions/checkout@v1

      - name: Setup stack
        uses: mstksg/setup-stack@v1

      - name: Setup cabal-install
        uses: actions/setup-haskell@v1
        with:
          ghc-version: ${{ matrix.plan.ghc }}
          cabal-version: ${{ matrix.plan.cabal-install }}
        if: matrix.plan.build == 'cabal'

      - name: Install dependencies
        run: |
          set -ex
          case "$BUILD" in
            stack)
              stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies
              ;;
            cabal)
              cabal --version
              cabal update
              PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')
              cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
              ;;
          esac
          set +ex
        env:
          ARGS: ${{ matrix.plan.resolver }}
          BUILD: ${{ matrix.plan.build }}

          #   - name: Build
          #     run: |
          #       set -ex
          #       case "$BUILD" in
          #         stack)
          #           stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
          #           ;;
          #         cabal)
          #           PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')
          #           cabal install --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
          #           ORIGDIR=$(pwd)
          #           for dir in $PACKAGES
          #           do
          #             cd $dir
          #             cabal check || [ "$CABALVER" == "1.16" ]
          #             cabal sdist
          #             PKGVER=$(cabal info . | awk '{print $2;exit}')
          #             SRC_TGZ=$PKGVER.tar.gz
          #             cd dist
          #             tar zxfv "$SRC_TGZ"
          #             cd "$PKGVER"
          #             cabal configure --enable-tests --ghc-options -O0
          #             cabal build
          #             if [ "$CABALVER" = "1.16" ] || [ "$CABALVER" = "1.18" ]; then
          #               cabal test
          #             else
          #               cabal test --show-details=streaming --log=/dev/stdout
          #             fi
          #             cd $ORIGDIR
          #           done
          #           ;;
          #       esac
          #       set +ex
          #     env:
          #       ARGS: ${{ matrix.plan.resolver }}
          #       BUILD: ${{ matrix.plan.build }}

          #   - name: Test
          #     run: stack test

      - name: Test with repos
        run: ./get_openscad_repos
